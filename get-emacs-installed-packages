#!/usr/bin/perl

use Getopt::Long;

$help = "$0: Get emacs 'package-activated-packages', that is, installed packages using emacs(client)
--emacs-path [STR]: Should be a filepath pointing to emacs(client). Default: /usr/bin/emacsclient27
--save [STR]: Should be a filepath where the script output is saved Default: activated_packages.el (if delim=el (so that it can be loaded)) or activated_packages.list
--delim [STR]: Package list should be delimited by? Default=nil (elisp eval-able output)
--terminal [FLAG]: Display the script/package-list in terminal

If delim=el; an executable script will be provided which directly be loaded in order to install those packages.";

die "$help\n" if $ARGV[0] =~ /--?h(?:elp)?/;

($p_emacs_path, $p_savepath, $p_delim, $p_terminal, $cmd) = ("/usr/bin/emacsclient27", 'activated_packages.el', 'el', 0, "@EMACS_PATH@ -e '(print package-activated-list)'");

GetOptions(
    "emacs-path=s" => \$p_emacs_path,
    "save=s" => \$p_savepath,
    "delim=s" => \$p_delim,
    "terminal" => \$p_terminal);

die "Non-existent emacs path: $p_emacs_path\n" if ! -f $p_emacs_path;

$cmd =~ s/@EMACS_PATH@/$p_emacs_path/;
$cmd = "$cmd | sed 's/[)(]//g'";
@package_list = split " ", qx($cmd);

###################################################

# to be used unless delim is el
# pass arrayref
sub save_packages {
    my $pkgs = $_[0];
    my $string = join($p_delim, @$pkgs);
    if ($p_terminal) {
	print $string . "\n";
    } else {
	open my $FH, ">", $p_savepath;
	print $FH $string;
	close $FH;
    }
}

# input: arrayref
sub save_install_script {
    my @pkgs = @{$_[0]};
    my $pkgs_string  = "'" . "(" . join(" ", @pkgs) . ")";
    my $script =
	qq((dolist (pkg $pkgs_string)
 (when (not (package-installed-p pkg))
  (package-install pkg)))
);
    if ($p_terminal) {
	print $script;
    } else {
	open my $FH, ">", $p_savepath;
	print $FH $script;
	close $FH;
    }
}

###################################################
if ($p_delim eq "el") {
    save_install_script(\@package_list);
} else {
    save_packages(\@package_list);
}
