#!/usr/bin/env ruby

require 'solid_assert'

SolidAssert.enable_assertions

def print_help()
  puts "$0: Use rofi to choose a string
Pipe a newline separated input"
end

def read_stdin()
  mesg = false

  if ARGV.length > 0
    mesg = ARGV.shift
    for i in (1 ... ARGV.length)
      ARGV.shift
    end
  end

  lines = ARGF.read.chomp
  assert not(lines.empty?), "No STDIN passed via pipe."
  return [mesg, lines.split()]
end

# Takes an array of args and pipes the input to rofi
def launch_rofi(a_args)
  mesg, arr = a_args
  arr = arr.join("\n")
  arr = %Q{"#{arr}"}
  cmd = %Q{echo #{arr} | rofi -dmenu}
  mesg != false and cmd += " -mesg '#{mesg}'"

  IO.popen(cmd) do |ls_io|
    out = ls_io.read.chomp
    out.empty? ? "" : out
  end
end

def main()
  if ARGV.length > 0
    if ARGV[0] =~ /-h(elp)?/
      print_help()
      exit
    end
  end
  puts launch_rofi(read_stdin())
end

main()
